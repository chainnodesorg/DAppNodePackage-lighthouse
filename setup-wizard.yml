version: "2"
fields:
  - id: GRAFFITI
    target:
      type: environment
      name: GRAFFITI
      service: validator
    title: Graffiti
    maxLength: 32
    description: >-
      Add a string to your proposed blocks, which will be seen on the block explorer
  - id: HTTP_ENGINE
    required: true
    target:
      type: environment
      name: HTTP_ENGINE
      service: beacon-chain
    title: Execution Client endpoint
    description: >-
      Consensus clients require access to an execution client. 

      - Geth - `http://geth.dappnode:8551` - [Install link](http://my.dappnode/#/installer/geth.dnp.dappnode.eth)

      - Nethermind - `http://nethermind.public.dappnode:8551` - [Install link](http://my.dappnode/#/installer/nethermind.public.dappnode.eth)
  - id: HTTP_WEB3PROVIDER
    required: true
    target:
      type: environment
      name: HTTP_WEB3PROVIDER
      service: beacon-chain
    title: Execution Client endpoint
    description: >-
      Consensus clients require access to an execution client. 

      - Geth - `http://geth.dappnode:8545` - [Install link](http://my.dappnode/#/installer/geth.dnp.dappnode.eth)

      - Nethermind - `http://nethermind.public.dappnode:8545` - [Install link](http://my.dappnode/#/installer/nethermind.public.dappnode.eth)
  - id: checkpointSyncUrl
    target:
      type: environment
      name: CHECKPOINT_SYNC_URL
      service: beacon-chain
    title: Checkpoint for fast sync
    description: >-
      To get Lighthouse up and running in only a few minutes, you can start Lighthouse from a recent finalized checkpoint state rather than syncing from genesis. This is substantially **faster** and consumes **less resources** than syncing from genesis, while still providing all the same features.  Be sure you are using a trusted node for the fast sync. Check [Lighthouse docs](https://lighthouse-book.sigmaprime.io/checkpoint-sync.html).
      Use the DAppNode official endpoint at `https://checkpoint-sync.dappnode.io/` or get your checkpoint sync from [Infura](https://infura.io/) (i.e https://XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX@eth2-beacon-chain.infura.io)
    required: false
  - id: feeRecipientAddress
    target:
      type: environment
      name: FEE_RECIPIENT_ADDRESS
      service: validator
    title: Fee Recipient Address
    description: >-
      Fee Recipient is a feature that lets you specify a priority fee recipient address on your validator client instance and beacon node. After The Merge, execution clients will begin depositing priority fees into this address whenever your validator client proposes a new block.
    required: true
    pattern: "^0x[a-fA-F0-9]{40}$"
    patternErrorMessage: Must be a valid address (0x1fd16a...)
